@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var IsUserMale = false;
    var IsUserFemale = false;
    var IsUserUnspecified = false;

    if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);

        if (user.Gender == "Male")
        {
            IsUserMale = true;
        }
        else if (user.Gender == "Female")
        {
            IsUserFemale = true;
        }
        else
        {
            IsUserUnspecified = true;
        }
    }
 }

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);

    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            @user.FirstName @user.LastName
            @if (IsUserMale)
            {
                <img src="~/Images/maleUserIcon.jpg" style="width:30px; height:25px;">
            }
            else if (IsUserFemale)
            {
                <img src="~/Images/femaleUserIcon.jpg" style="width:30px; height:25px;">
            }
            else if (IsUserUnspecified)
            {
                <img src="~/Images/unspecifiedUserIcon.jpg" style="width:30px; height:25px;">
            }
        </a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
